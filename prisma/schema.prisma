generator client {
  provider        = "prisma-client-js"
  binaryTargets   = ["native", "linux-musl"]
  previewFeatures = ["orderByAggregateGroup"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  email        String        @unique
  password     String
  fullname     String?
  gender       Gender?
  age          Int?
  profilePic   String?
  applications Application[]
  posts        Post[]
}

model Organization {
  id         Int     @id @default(autoincrement())
  email      String  @unique
  password   String
  name       String?
  desc       String?
  addr       String?
  phone      String?
  events     Event[]
  profilePic String?
}

model Event {
  id             Int                       @id @default(autoincrement())
  name           String
  desc           String
  gallery        String[]
  startTime      DateTime
  endTime        DateTime
  location       String
  coor           Unsupported("geography")?
  positions      Position[]
  Organization   Organization?             @relation(fields: [organizationId], references: [id])
  organizationId Int?
}

model Position {
  id           Int           @id @default(autoincrement())
  name         String
  desc         String
  requirements String
  gender       Gender?       @default(ANY)
  timeCreated  DateTime      @updatedAt
  thumbnail    String
  Event        Event         @relation(fields: [eventId], references: [id])
  eventId      Int
  tags         Tag[]
  applications Application[]
}

model Application {
  id          Int               @id @default(autoincrement())
  Position    Position          @relation(fields: [positionId], references: [id])
  positionId  Int
  User        User              @relation(fields: [userId], references: [id])
  userId      Int
  notes       String
  timeCreated DateTime          @updatedAt
  feedback    String?
  status      ApplicationStatus @default(PENDING)

  @@unique([userId, positionId])
}

model Post {
  id          Int      @id @default(autoincrement())
  title       String
  thumbnail   String
  content     String
  timeCreated DateTime @updatedAt
  User        User?    @relation(fields: [userId], references: [id])
  userId      Int?
}

model Tag {
  id        Int        @id @default(autoincrement())
  name      String     @unique
  positions Position[]
}

enum Gender {
  MALE
  FEMALE
  OTHER
  ANY
}

enum ApplicationStatus {
  PENDING
  ACCEPTED
  REJECTED
}
