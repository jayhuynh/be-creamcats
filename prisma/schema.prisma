generator client {
  provider        = "prisma-client-js"
  binaryTargets   = ["native", "linux-musl"]
  previewFeatures = ["orderByAggregateGroup"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  email        String        @unique
  fullname     String?
  password     String
  tags         Tag[]
  applications Application[]
}

model Org {
  id     Int     @id @default(autoincrement())
  name   String
  desc   String
  addr   String?
  email  String?
  phone  String?
  events Event[]
}

model Event {
  id        Int         @id @default(autoincrement())
  name      String
  desc      String
  location  String
  startTime DateTime
  endTime   DateTime
  gallery   String[]
  status    EventStatus
  Org       Org         @relation(fields: [orgId], references: [id])
  orgId     Int
  positions Position[]
}

model Position {
  id           Int           @id @default(autoincrement())
  name         String
  desc         String
  requirements String
  typesOfWork  String[]
  timeCreated  DateTime      @updatedAt
  thumbnail    String
  Event        Event         @relation(fields: [eventId], references: [id])
  eventId      Int
  tags         Tag[]
  applications Application[]
}

model Application {
  id         Int      @id @default(autoincrement())
  Position   Position @relation(fields: [positionId], references: [id])
  positionId Int
  User       User     @relation(fields: [userId], references: [id])
  userId     Int
  notes      String

  @@unique([userId, positionId])
}

model Tag {
  id        Int        @id @default(autoincrement())
  name      String
  users     User[]
  positions Position[]
}

enum EventStatus {
  PAST
  ONGOING
}
